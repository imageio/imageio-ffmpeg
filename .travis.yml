# Travis CI configuration file for imageio-ffmpeg


language: python

# Only run travis build on push for master branch
branches:
  only:
    - master

# Cache
cache:
  - pip


matrix:
  include:
    # One runner for style stuff
    - os: linux
      python: "3.6"
      env: TEST_UNIT=0 TEST_STYLE=1
    # Special OS'es / interpreters
    #- os: windows
    #  language: bash
    #  env: TEST_UNIT=1
    # The main tests run on Linux for a all relevant Python versions.
    - os: linux
      python: "3.4"
      env: TEST_UNIT=1
    - os: linux
      python: "3.5"
      env: TEST_UNIT=1
    - os: linux
      python: "3.6"
      env: TEST_UNIT=1 TEST_COVER=1
    - os: linux
      python: "3.7-dev"
      env: TEST_UNIT=1


before_install:
    - REDIRECT_TO=/dev/stdout  # change to /dev/null to silence Travis
    - SRC_DIR=$(pwd)
    # file size checks
    - if [ "${TEST_STYLE}" == "1" ]; then
        if [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then
          GIT_TARGET_EXTRA="+refs/heads/${TRAVIS_BRANCH}";
          GIT_SOURCE_EXTRA="+refs/pull/${TRAVIS_PULL_REQUEST}/merge";
        else
          GIT_TARGET_EXTRA="";
          GIT_SOURCE_EXTRA="";
        fi;
        cd ~;
        mkdir target-size-clone && cd target-size-clone;
        git init &> ${REDIRECT_TO} && git remote add -t ${TRAVIS_BRANCH} origin git://github.com/${TRAVIS_REPO_SLUG}.git &>${REDIRECT_TO};
        git fetch origin ${GIT_TARGET_EXTRA} &> ${REDIRECT_TO} && git checkout -qf FETCH_HEAD &> ${REDIRECT_TO} && cd ..;
        TARGET_SIZE=`du -s target-size-clone | sed -e "s/\t.*//"`;
        mkdir source-size-clone && cd source-size-clone;
        git init &> ${REDIRECT_TO} && git remote add -t ${TRAVIS_BRANCH} origin git://github.com/${TRAVIS_REPO_SLUG}.git &> ${REDIRECT_TO};
        git fetch origin ${GIT_SOURCE_EXTRA} &> ${REDIRECT_TO} && git checkout -qf FETCH_HEAD &> ${REDIRECT_TO} && cd ..;
        SOURCE_SIZE=`du -s source-size-clone | sed -e "s/\t.*//"`;
        if [ "${SOURCE_SIZE}" != "${TARGET_SIZE}" ]; then
          SIZE_DIFF=`expr ${SOURCE_SIZE} - ${TARGET_SIZE}`;
        else
          SIZE_DIFF=0;
        fi;
      fi;
    - cd ${SRC_DIR}

install:
    # Special stuff for Windows and Legacy Python
    - if [ "$TRAVIS_OS_NAME" = "windows" ]; then
        choco install python3;
        export PATH=/c/Python38:/c/Python38/Scripts:/c/Python37:/c/Python37/Scripts:$PATH;
      fi;
    # Install dependencies depending on ENV
    - pip install invoke
    - if [ "${TEST_UNIT}" == "1" ]; then
        pip install -q psutil;
        pip install -q --upgrade pytest pytest-cov;
        invoke get-ffmpeg-binary;
      fi;
    - if [ "${TEST_STYLE}" == "1" ]; then
        pip install -q --upgrade black flake8;
      fi;

before_script:

script: 
    - python -c "import sys; print(sys.version, '\n', sys.prefix)";
    # Run unit tests or style test
    - if [ "${TEST_STYLE}" == "1" ]; then
        echo "Size difference ${SIZE_DIFF} kB";
        test ${SIZE_DIFF} -lt 100;
      fi;
    - if [ "${TEST_STYLE}" == "1" ]; then
        invoke lint;
        invoke checkformat;
      fi;
    - if [ "${TEST_UNIT}" == "1" ]; then
        python -c 'import imageio_ffmpeg; print(imageio_ffmpeg.get_ffmpeg_version())';
        invoke test;
      fi;

after_success:
    - echo == ALL TESTS PASS ==

after_failure:
    - echo == FAILURE ==

after_script:
