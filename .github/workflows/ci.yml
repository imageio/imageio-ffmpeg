name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:

  lint-build:
    name: Linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install invoke black flake8
      - name: Lint
        run: |
            invoke lint
            invoke checkformat

  test-builds:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux py35
            os: ubuntu-20.04
            pyversion: '3.5'
          - name: Linux py36
            os: ubuntu-latest
            pyversion: '3.6'
          - name: Linux py37
            os: ubuntu-latest
            pyversion: '3.7'
          - name: Linux py38
            os: ubuntu-latest
            pyversion: '3.8'
          - name: Linux py39
            os: ubuntu-latest
            pyversion: '3.9'
          - name: Linux py310
            os: ubuntu-latest
            pyversion: '3.10'
          - name: Linux pypy3
            os: ubuntu-latest
            pyversion: 'pypy3'
          - name: Windows py39
            os: windows-latest
            pyversion: '3.9'
          - name: MacOS py39
            os: macos-latest
            pyversion: '3.9'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.pyversion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyversion }}
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install psutil
            pip install invoke pytest pytest-cov
            invoke get-ffmpeg-binary;
      - name: Test with pytest
        run: |
            python -c "import sys; print(sys.version, '\n', sys.prefix)";
            python -c 'import imageio_ffmpeg; print(imageio_ffmpeg.get_ffmpeg_version())'
            invoke test
